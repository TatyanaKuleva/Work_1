import json

import pytest
import datetime
import pandas as pd

@pytest.fixture
def get_str_date():
    return '2019-07-17 15:05:27'

@pytest.fixture
def result_str_date():
    return datetime.datetime(2019, 7, 1, 0, 0)

@pytest.fixture
def get_data_dict():
    return [{'Дата операции': '17.07.2019 15:04:27'},
            {'Дата операции': '17.07.2019 15:04:27'},
            {'Дата операции': '17.08.2019 15:04:27'},
            {'Дата операции': '17.08.2019 15:04:27'}]

@pytest.fixture
def result_data_dict():
    return [{'Дата операции': '17.07.2019 15:04:27'},
            {'Дата операции': '17.07.2019 15:04:27'}]

@pytest.fixture
def get_list_dict_by_card_trans():
    return [{'Номер карты': '*1111', 'Сумма операции': -25.0},
            {'Номер карты': '*2222', 'Сумма операции': 25.0},
            {'Номер карты': '*2222', 'Сумма операции': -25.0},
            {'Номер карты': '*3333', 'Сумма операции': -25.0},
            {'Номер карты': '*3333', 'Сумма операции': -25.0},
            {'Номер карты': '*3333', 'Сумма операции': -25.0},
            {'Номер карты': '*0000', 'Сумма операции': 0.0}]

@pytest.fixture
def result_list_dict_by_card_trans():
    return [{'Номер карты': '*0000', 'расходы по карте': 0.0, 'cashback':0.0},
            {'Номер карты': '*1111', 'расходы по карте': -25.0, 'cashback':0.25},
            {'Номер карты': '*2222', 'расходы по карте': -25.0, 'cashback':0.25},
            {'Номер карты': '*3333', 'расходы по карте': -75.0, 'cashback':0.75}
            ]


@pytest.fixture
def get_list_dict_by_top_five_trans():
    return [{'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31', 'Сумма операции': -50000.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'Сумма операции': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20', 'Сумма операции': 17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09', 'Сумма операции': 13000.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк', 'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -3000.0},
            {'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31',
             'Сумма операции': -1000.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'amount': -500.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20',
             'Сумма операции': 0.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09',
             'Сумма операции': 1300.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк', 'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -30.0}
            ]


@pytest.fixture
def get_list_dict_for_expensies():
    return [{'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31', 'Сумма платежа': -50000.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'Сумма платежа': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20', 'Сумма платежа': 17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09', 'Сумма платежа': 13000.0},
            ]

@pytest.fixture
def result_list_dict_only_expenses():
    return pd.DataFrame({'Категория':['Переводы', 'nan'], 'Описание': ['На р/с ООО "ФОРТУНА"', 'Перевод с карты'], 'Дата операции': ['15.07.2019 20:00:31','01.07.2019 17:44:36'],
                         'Сумма платежа': [-50000.0, -17000.0]})


@pytest.fixture
def result_list_dict_by_top_five_trans():
    return [{'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31', 'Сумма операции': -50000.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'Сумма операции': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20', 'Сумма операции': 17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09', 'Сумма операции': 13000.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк', 'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -3000.0}
            ]

@pytest.fixture()
def get_df_trans():
    return pd.DataFrame({'Валюта операции': ['RUB', 'RUB', 'RUB', 'RUB', 'RUB', 'RUB'],
                         'Дата операции': ['30.11.2021 16:44:00', '29.12.2021 12:22:00',
                                           '28.10.2021 10:02:00', '30.11.2021 16:44:00',
                                           '29.11.2021 12:22:00', '28.11.2021 10:02:00'],
                          'Категория': ['Аптеки', 'Аптеки', 'Супермаркеты',
                                        'Супермаркеты', 'Пополнения', 'Дом и ремонт'],
                         'sum_by_column': [-3000.0, 200.0, -10000.0,
                                            -3000.0, 200.0, -10000.0]})

@pytest.fixture()
def result_df_sorted():
    return pd.DataFrame({'category': ['Супермаркеты', 'Дом и ремонт', 'Аптеки', 'Пополнения'],
                         'amount': [-13000.0, -10000.0, -2800.0, 200.0]})

@pytest.fixture()
def get_df_trans_for_filtr():
    return pd.DataFrame({'Валюта операции': ['RUB', 'RUB', 'RUB', 'RUB', 'RUB', 'RUB'],
                         'Дата операции': ['30.12.2021 16:44:00', '29.12.2021 12:22:00',
                                           '28.12.2021 10:02:00', '30.12.2021 16:44:00',
                                           '29.12.2021 12:22:00', '28.12.2021 10:02:00'],
                          'category': ['Аптеки', 'Аптеки', 'Супермаркеты',
                                        'Супермаркеты', 'Пополнения', 'Дом и ремонт'],
                         'sum_by_column': [-3000.0, 200.0, -10000.0,
                                            -3000.0, 200.0, -10000.0]})

@pytest.fixture()
def filtr_main_category():
    return pd.DataFrame({'index': [2,3,5], 'Валюта операции': ['RUB', 'RUB', 'RUB'],
                         'Дата операции': ['28.12.2021 10:02:00', '30.12.2021 16:44:00', '28.12.2021 10:02:00'],
                         'category': ['Супермаркеты', 'Супермаркеты', 'Дом и ремонт'],
                         'sum_by_column': [-10000.0, -3000.0, -10000.0]})

@pytest.fixture()
def get_top_seven_category_mai():
    return pd.DataFrame({'category': ['Супермаркеты', 'Дом и ремонт', 'Аптеки', 'Пополнения',
                                                             'Фатсфуд','Образование', 'Связь', 'Билеты',
                                                             'Семья', 'Дети','Родители', 'Питомцы'],
                         'amount': [-13000.0, -10000.0, -2800.0, 200.0,
                                    -13000.0, -10000.0, -2800.0, 200.0,
                                    -13000.0, -10000.0, -2800.0, 200.0]})

@pytest.fixture()
def result_top_seven_category_mai():
    return [{'category': 'Супермаркеты', 'amount': 13000.0}, {'category': 'Дом и ремонт', 'amount': 10000.0},
            {'category': 'Аптеки', 'amount': 2800.0}, {'category': 'Пополнения', 'amount': 200.0},
            {'category': 'Фатсфуд', 'amount': 13000.0}, {'category': 'Образование', 'amount': 10000.0},
            {'category': 'Связь', 'amount': 2800.0}, {'category': 'Остальное', 'amount': 25400.0}]

@pytest.fixture()
def result_income_category_main():
    return [{'category': 'Супермаркеты', 'amount': -13000.0}, {'category': 'Дом и ремонт', 'amount': -10000.0},
            {'category': 'Аптеки', 'amount': -2800.0}, {'category': 'Пополнения', 'amount': 200.0},
            {'category': 'Фатсфуд', 'amount': -13000.0}, {'category': 'Образование', 'amount': -10000.0},
            {'category': 'Связь', 'amount': -2800.0}, {'category': 'Билеты', 'amount': 200.0},
            {'category': 'Семья', 'amount': -13000.0}, {'category': 'Дети', 'amount': -10000.0},
            {'category': 'Родители', 'amount': -2800.0}, {'category': 'Питомцы', 'amount': 200.0}]


@pytest.fixture()
def get_extract_transfer_cash():
    return pd.DataFrame({'Валюта операции': ['RUB', 'RUB', 'RUB', 'RUB', 'RUB', 'RUB'],
                         'Дата операции': ['30.12.2021 16:44:00', '29.12.2021 12:22:00',
                                           '28.12.2021 10:02:00', '30.12.2021 16:44:00',
                                           '29.12.2021 12:22:00', '28.12.2021 10:02:00'],
                          'category': ['Аптеки', 'Аптеки', 'Супермаркеты',
                                        'Супермаркеты', 'Пополнения', 'Дом и ремонт'],
                         'amount': [3000.0, 200.0, 10000.0,
                                            3000.0, 200.0, 10000.0]})
@pytest.fixture()
def result_extract_transfer_cash():
    return [{'category': 'Аптеки', 'amount': 3000.0}, {'category': 'Аптеки', 'amount': 200.0}, {'category': 'Пополнения', 'amount': 200.0}]


@pytest.fixture
def get_data_dict_with_cashback():
    return [{'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31', 'Сумма операции': -50000.0, 'Кэшбэк': 500.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'Сумма операции': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20', 'Сумма операции': 17000.0, 'Кэшбэк': 170.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09', 'Сумма операции': 13000.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк', 'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -3000.0, 'Кэшбэк': 30},
            {'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31',
             'Сумма операции': -50000.0, 'Кэшбэк': 500.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36',
             'Сумма операции': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20',
             'Сумма операции': 17000.0, 'Кэшбэк': 170.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09',
             'Сумма операции': 13000.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк',
             'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -3000.0, 'Кэшбэк': 30}
            ]

@pytest.fixture
def result_data_dict_with_cashback():
    d = {"Переводы": 1000.0, "Пополнения": 340.0, "Наличные": 60.0}
    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def result_invest_first():
    d = {"Сумма накопления в результате округления": 99.0}
    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def result_search_first():
    d = [
    {
        "Категория": "Переводы",
        "Описание": "На р/с ООО \"ФОРТУНА\"",
        "Дата операции": "15.07.2019 20:00:31",
        "Сумма операции": -50000.0,
        "Кэшбэк": 500.0
    },
    {
        "Категория": "nan",
        "Описание": "Перевод с карты",
        "Дата операции": "01.07.2019 17:44:36",
        "Сумма операции": -17000.0
    },
    {
        "Категория": "Пополнения",
        "Описание": "Перевод с карты",
        "Дата операции": "01.07.2019 18:14:20",
        "Сумма операции": 17000.0,
        "Кэшбэк": 170.0
    },
    {
        "Категория": "Пополнения",
        "Описание": "Перевод с карты",
        "Дата операции": "06.07.2019 21:08:09",
        "Сумма операции": 13000.0
    },
    {
        "Категория": "Переводы",
        "Описание": "На р/с ООО \"ФОРТУНА\"",
        "Дата операции": "15.07.2019 20:00:31",
        "Сумма операции": -50000.0,
        "Кэшбэк": 500.0
    },
    {
        "Категория": "nan",
        "Описание": "Перевод с карты",
        "Дата операции": "01.07.2019 17:44:36",
        "Сумма операции": -17000.0
    },
    {
        "Категория": "Пополнения",
        "Описание": "Перевод с карты",
        "Дата операции": "01.07.2019 18:14:20",
        "Сумма операции": 17000.0,
        "Кэшбэк": 170.0
    },
    {
        "Категория": "Пополнения",
        "Описание": "Перевод с карты",
        "Дата операции": "06.07.2019 21:08:09",
        "Сумма операции": 13000.0
    }
]

    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def result_search_second():
    d = [
    {
        "Категория": "Переводы",
        "Описание": "На р/с ООО \"ФОРТУНА\"",
        "Дата операции": "15.07.2019 20:00:31",
        "Сумма операции": -50000.0,
        "Кэшбэк": 500.0
    },
    {
        "Категория": "Переводы",
        "Описание": "На р/с ООО \"ФОРТУНА\"",
        "Дата операции": "15.07.2019 20:00:31",
        "Сумма операции": -50000.0,
        "Кэшбэк": 500.0
    }
]
    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def get_data_search_phone():
    return [{'Категория': 'Переводы', 'Описание': 'МТС Mobile +7 921 999-99-99', 'Дата операции': '15.07.2019 20:00:31', 'Сумма операции': -50000.0, 'Кэшбэк': 500.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'Сумма операции': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Я МТС +7 921 111-22-33', 'Дата операции': '01.07.2019 18:14:20', 'Сумма операции': 17000.0, 'Кэшбэк': 170.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '06.07.2019 21:08:09', 'Сумма операции': 13000.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк', 'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -3000.0, 'Кэшбэк': 30}
    ]

@pytest.fixture
def result_search_phone():
    d = [
    {
        "Категория": "Переводы",
        "Описание": "МТС Mobile +7 921 999-99-99",
        "Дата операции": "15.07.2019 20:00:31",
        "Сумма операции": -50000.0,
        "Кэшбэк": 500.0
    },
    {
        "Категория": "Пополнения",
        "Описание": "Я МТС +7 921 111-22-33",
        "Дата операции": "01.07.2019 18:14:20",
        "Сумма операции": 17000.0,
        "Кэшбэк": 170.0
    }
]
    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def get_data_for_search_transfers():
    return [{'Категория': 'Переводы', 'Описание': 'На р/с ООО "ФОРТУНА"', 'Дата операции': '15.07.2019 20:00:31', 'Сумма операции': -50000.0, 'Кэшбэк': 500.0},
            {'Категория': 'nan', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 17:44:36', 'Сумма операции': -17000.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20', 'Сумма операции': 17000.0, 'Кэшбэк': 170.0},
            {'Категория': 'Переводы', 'Описание': 'Марина К.', 'Дата операции': '15.07.2019 20:00:31',
             'Сумма операции': -50000.0, 'Кэшбэк': 500.0},
            {'Категория': 'Пополнения', 'Описание': 'Перевод с карты', 'Дата операции': '01.07.2019 18:14:20',
             'Сумма операции': 17000.0, 'Кэшбэк': 170.0},
            {'Категория': 'Переводы', 'Описание': 'Перевод с карты Василий М.', 'Дата операции': '06.07.2019 21:08:09',
             'Сумма операции': 13000.0},
            {'Категория': 'Наличные', 'Описание': 'Снятие в банкомате Альфа-Банк',
             'Дата операции': '06.07.2019 14:08:29',
             'Сумма операции': -3000.0, 'Кэшбэк': 30}
            ]

@pytest.fixture
def result_search_for_transfers():
    d = [
    {
        "Категория": "Переводы",
        "Описание": "Марина К.",
        "Дата операции": "15.07.2019 20:00:31",
        "Сумма операции": -50000.0,
        "Кэшбэк": 500.0
    },
    {
        "Категория": "Переводы",
        "Описание": "Перевод с карты Василий М.",
        "Дата операции": "06.07.2019 21:08:09",
        "Сумма операции": 13000.0
    }
]
    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture()
def get_df_trans_for_reports():
    return pd.DataFrame({'Валюта операции': ['RUB', 'RUB', 'RUB', 'RUB', 'RUB', 'RUB'],
                         'Дата операции': ['30.12.2021 16:44:00', '21.12.2021 12:22:00',
                                           '24.12.2021 10:02:00', '22.12.2021 16:44:00',
                                           '25.12.2021 12:22:00', '28.12.2021 10:02:00'],
                          'Категория': ['Аптеки', 'Аптеки', 'Супермаркеты',
                                        'Супермаркеты', 'Пополнения', 'Дом и ремонт'],
                         'Сумма операции': [-3000.0, 200.0, -10000.0,
                                            -3000.0, 200.0, -10000.0]})

@pytest.fixture
def result_reports_by_category():
    d = {"sum_trans": 3200.0}

    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def result_reports_by_weekday():
    d = {
    "Вторник": 5100.0,
    "Среда": 3000.0,
    "Четверг": 3000.0,
    "Пятница": 10000.0,
    "Суббота": 200.0
}

    return json.dumps(d, indent=4, ensure_ascii=False)

@pytest.fixture
def result_reports_by_workday():
    d = {
    "средние траты в рабочий день": 5240.0,
    "средние траты в выходной день": 200.0
}

    return json.dumps(d, indent=4, ensure_ascii=False)



